[{"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/index.js":"1","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/reportWebVitals.js":"2","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/App.js":"3","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Post.js":"4","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Home.js":"5","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Create.js":"6","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Nav.js":"7","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/SinglePost.js":"8","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/UserContext.js":"9","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Login.js":"10"},{"size":564,"mtime":1609283096954,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1609203894068,"results":"13","hashOfConfig":"12"},{"size":740,"mtime":1609279520828,"results":"14","hashOfConfig":"12"},{"size":665,"mtime":1609224410160,"results":"15","hashOfConfig":"12"},{"size":714,"mtime":1609269355885,"results":"16","hashOfConfig":"12"},{"size":1584,"mtime":1609278223090,"results":"17","hashOfConfig":"12"},{"size":520,"mtime":1609279924309,"results":"18","hashOfConfig":"12"},{"size":2480,"mtime":1609279358974,"results":"19","hashOfConfig":"12"},{"size":300,"mtime":1609280011028,"results":"20","hashOfConfig":"12"},{"size":1651,"mtime":1609283478657,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1apooty",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":2,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/index.js",[],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/reportWebVitals.js",[],["47","48"],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/App.js",[],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Post.js",["49","50","51"],"// @flow\nimport * as React from 'react';\n\nconst post = {\n  id: 1,\n  description: 'Driver-side picture with schedule of deliveries!',\n  likes: 20,\n  author: null,\n  created_at: '2020-12-29T01:59:29.166Z',\n  updated_at: '2020-12-29T01:59:30.360Z',\n  image: {\n    url: '/uploads/IMG_5674_cfa4616c3b.PNG',\n  },\n};\nconst API_URL = 'http://localhost:1337';\nconst formatImageUrl = (url) => `${API_URL}${url}`;\n\nexport default ({ description, likes, url }) => {\n  return (\n    <div className='Post'>\n      <img className='Post__Image' src={formatImageUrl(url)} />\n      <h4>{description}</h4>\n      <div>\n        <span>Likes: {likes}</span>\n      </div>\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Home.js",["52"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Post from '../components/Post';\n\nexport default () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const response = await fetch('http://localhost:1337/posts');\n      const data = await response.json();\n      setPosts(data);\n    };\n    getPosts();\n  }, []);\n\n  return (\n    <div className='Home'>\n      {posts.map((post) => (\n        <Link to={`/${post.id}`}>\n          <Post\n            likes={post.likes}\n            description={post.description}\n            url={post.image && post.image.url}\n          />\n        </Link>\n      ))}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Create.js",["53"],"import React, { useState } from 'react';\n\nexport default () => {\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  console.log('file', file);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!description) {\n      setError('Please add a description');\n      //Add error message here\n      return;\n    }\n\n    if (!file) {\n      setError('Please add a file');\n      //Add error message here\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('data', JSON.stringify({ description }));\n    formData.append('files.image', file);\n\n    try {\n      const response = await fetch('http://localhost:1337/posts', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n\n      console.log('data', data);\n    } catch (err) {\n      console.log('Exception ', err);\n      setError(err);\n    }\n  };\n\n  return (\n    <div className='Create'>\n      <h2>Create</h2>\n\n      {error && <p>error</p>}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder='Description'\n          value={description}\n          onChange={(event) => {\n            setError('');\n            setDescription(event.target.value);\n          }}\n        />\n        <input\n          type='File'\n          placeholder='Add a file'\n          onChange={(event) => {\n            setError('');\n            setFile(event.target.files[0]);\n          }}\n        />\n\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Nav.js",["54"],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/SinglePost.js",["55","56","57"],"import React, { useState, useEffect, useContext } from 'react';\nimport Post from '../components/Post';\n\nimport { UserContext } from '../context/UserContext';\n\nexport default ({ match, history }) => {\n  const { id } = match.params;\n  console.log('id', id);\n\n  const { user, setUser } = useContext(UserContext);\n  console.log('user', user);\n  console.log('setUser', setUser);\n\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [edit, setEdit] = useState(false);\n  //Used for the edit form\n  const [description, setDescription] = useState('');\n\n  const fetchPost = async () => {\n    const response = await fetch(`http://localhost:1337/posts/${id}`);\n    const data = await response.json();\n    console.log('data', data);\n    setPost(data);\n    setDescription(data.description);\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    const response = await fetch(`http://localhost:1337/posts/${id}`, {\n      method: 'DELETE',\n    });\n    const data = await response.json();\n    history.push('/');\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n    console.log('handleEditSubmit');\n    const response = await fetch(`http://localhost:1337/posts/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        description,\n      }),\n    });\n    const data = await response.json();\n    fetchPost();\n    console.log('handleEditSubmit data', data);\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      {!loading && (\n        <>\n          {post.id && (\n            <>\n              <Post\n                description={post.description}\n                url={post.image && post.image.url}\n                likes={post.likes}\n              />\n              <button onClick={handleDelete}>Delete this Post</button>\n              <button onClick={() => setEdit(true)}>Edit this Post</button>\n              {edit && (\n                <form onSubmit={handleEditSubmit}>\n                  <input\n                    value={description}\n                    onChange={(event) => setDescription(event.target.value)}\n                    placeholder='New description'\n                  />\n                  <button>Confirm</button>\n                </form>\n              )}\n            </>\n          )}\n          {!post.id && <p>404 - not found</p>}\n        </>\n      )}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/UserContext.js",["58"],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Login.js",["59","60","61","62"],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":7,"nodeType":"69","messageId":"70","endLine":4,"endColumn":11},{"ruleId":"71","severity":1,"message":"72","line":18,"column":1,"nodeType":"73","endLine":28,"endColumn":3},{"ruleId":"74","severity":1,"message":"75","line":21,"column":7,"nodeType":"76","endLine":21,"endColumn":64},{"ruleId":"71","severity":1,"message":"72","line":5,"column":1,"nodeType":"73","endLine":29,"endColumn":3},{"ruleId":"71","severity":1,"message":"72","line":3,"column":1,"nodeType":"73","endLine":71,"endColumn":3},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":23,"endColumn":3},{"ruleId":"71","severity":1,"message":"72","line":6,"column":1,"nodeType":"73","endLine":86,"endColumn":3},{"ruleId":"67","severity":1,"message":"77","line":33,"column":11,"nodeType":"69","messageId":"70","endLine":33,"endColumn":15},{"ruleId":"78","severity":1,"message":"79","line":54,"column":6,"nodeType":"80","endLine":54,"endColumn":8,"suggestions":"81"},{"ruleId":"71","severity":1,"message":"72","line":5,"column":1,"nodeType":"73","endLine":12,"endColumn":3},{"ruleId":"67","severity":1,"message":"82","line":2,"column":10,"nodeType":"69","messageId":"70","endLine":2,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":4,"column":1,"nodeType":"73","endLine":70,"endColumn":3},{"ruleId":"83","severity":2,"message":"84","line":9,"column":40,"nodeType":"69","messageId":"85","endLine":9,"endColumn":51},{"ruleId":"86","severity":2,"message":"87","line":14,"column":7,"nodeType":"69","messageId":"88","endLine":14,"endColumn":14},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'post' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'UserConext' is defined but never used.","no-undef","'UserContext' is not defined.","undef","no-restricted-globals","Unexpected use of 'history'.","defaultMessage","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [fetchPost]",{"range":"94","text":"95"},[1540,1542],"[fetchPost]"]