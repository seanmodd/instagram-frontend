[{"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/index.js":"1","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/reportWebVitals.js":"2","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/App.js":"3","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Post.js":"4","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Home.js":"5","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Create.js":"6","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Nav.js":"7","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/SinglePost.js":"8","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/UserContext.js":"9","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Login.js":"10","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Signup.js":"11","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/LikesContext.js":"12"},{"size":680,"mtime":1609382014301,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609203894068,"results":"15","hashOfConfig":"14"},{"size":942,"mtime":1609390281190,"results":"16","hashOfConfig":"14"},{"size":665,"mtime":1609224410160,"results":"17","hashOfConfig":"14"},{"size":714,"mtime":1609269355885,"results":"18","hashOfConfig":"14"},{"size":1850,"mtime":1609357959955,"results":"19","hashOfConfig":"14"},{"size":709,"mtime":1609307338656,"results":"20","hashOfConfig":"14"},{"size":4156,"mtime":1609383607878,"results":"21","hashOfConfig":"14"},{"size":300,"mtime":1609280011028,"results":"22","hashOfConfig":"14"},{"size":1665,"mtime":1609293613951,"results":"23","hashOfConfig":"14"},{"size":1570,"mtime":1609298169782,"results":"24","hashOfConfig":"14"},{"size":1356,"mtime":1609382039322,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1apooty",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/index.js",[],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/reportWebVitals.js",[],["59","60"],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/App.js",[],"/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Post.js",["61","62","63"],"// @flow\nimport * as React from 'react';\n\nconst post = {\n  id: 1,\n  description: 'Driver-side picture with schedule of deliveries!',\n  likes: 20,\n  author: null,\n  created_at: '2020-12-29T01:59:29.166Z',\n  updated_at: '2020-12-29T01:59:30.360Z',\n  image: {\n    url: '/uploads/IMG_5674_cfa4616c3b.PNG',\n  },\n};\nconst API_URL = 'http://localhost:1337';\nconst formatImageUrl = (url) => `${API_URL}${url}`;\n\nexport default ({ description, likes, url }) => {\n  return (\n    <div className='Post'>\n      <img className='Post__Image' src={formatImageUrl(url)} />\n      <h4>{description}</h4>\n      <div>\n        <span>Likes: {likes}</span>\n      </div>\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Home.js",["64"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Post from '../components/Post';\n\nexport default () => {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      const response = await fetch('http://localhost:1337/posts');\n      const data = await response.json();\n      setPosts(data);\n    };\n    getPosts();\n  }, []);\n\n  return (\n    <div className='Home'>\n      {posts.map((post) => (\n        <Link to={`/${post.id}`}>\n          <Post\n            likes={post.likes}\n            description={post.description}\n            url={post.image && post.image.url}\n          />\n        </Link>\n      ))}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Create.js",["65"],"import React, { useState, useContext } from 'react';\nimport { UserContext } from '../context/UserContext';\n\nexport default () => {\n  const [description, setDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState('');\n\n  console.log('file', file);\n\n  const { user } = useContext(UserContext);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!user) {\n      setError('Please log in first');\n\n      return;\n    }\n\n    if (!description) {\n      setError('Please add a description');\n      //Add error message here\n      return;\n    }\n\n    if (!file) {\n      setError('Please add a file');\n      //Add error message here\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('data', JSON.stringify({ description }));\n    formData.append('files.image', file);\n\n    try {\n      const response = await fetch('http://localhost:1337/posts', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${user.jwt}`,\n        },\n        body: formData,\n      });\n      const data = await response.json();\n\n      console.log('data', data);\n    } catch (err) {\n      console.log('Exception ', err);\n      setError(err);\n    }\n  };\n\n  return (\n    <div className='Create'>\n      <h2>Create</h2>\n\n      {error && <p>error</p>}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder='Description'\n          value={description}\n          onChange={(event) => {\n            setError('');\n            setDescription(event.target.value);\n          }}\n        />\n        <input\n          type='File'\n          placeholder='Add a file'\n          onChange={(event) => {\n            setError('');\n            setFile(event.target.files[0]);\n          }}\n        />\n\n        <button>Submit</button>\n      </form>\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/components/Nav.js",["66"],"import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { UserContext } from '../context/UserContext';\nexport default () => {\n  const { user } = useContext(UserContext);\n  return (\n    <div className='Nav'>\n      <NavLink className='NavLink' to='/' exact>\n        Home\n      </NavLink>\n      {user && (\n        <NavLink className='NavLink' to='/create' exact>\n          Create\n        </NavLink>\n      )}\n      {!user && (\n        <>\n          <NavLink className='NavLink' to='/login' exact>\n            Login\n          </NavLink>\n\n          <NavLink className='NavLink' to='/signup' exact>\n            Signup\n          </NavLink>\n        </>\n      )}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/SinglePost.js",["67","68","69","70","71","72","73","74"],"import React, { useState, useEffect, useContext } from 'react';\nimport Post from '../components/Post';\n\nimport { UserContext } from '../context/UserContext';\nimport { LikesContext } from '../context/LikesContext';\n\nexport default ({ match, history }) => {\n  const { id } = match.params;\n  console.log('id', id);\n\n  const { user, setUser } = useContext(UserContext);\n  console.log('user', user);\n  console.log('setUser', setUser);\n\n  const { likesGiven, likesReceived } = useContext(LikesContext);\n\n  const isPostAlreadyLiked = (() => {\n    return \n      likesGiven && likesGiven.find((like) => like.post && like.post.id == id)\n    ;\n  })();\n  console.log('isPostAlreadyLiked', isPostAlreadyLiked);\n\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [edit, setEdit] = useState(false);\n  //Used for the edit form\n  const [description, setDescription] = useState('');\n\n  const fetchPost = async () => {\n    const response = await fetch(`http://localhost:1337/posts/${id}`);\n    const data = await response.json();\n    console.log('data', data);\n    setPost(data);\n    setDescription(data.description);\n    setLoading(false);\n  };\n\n  const handleDelete = async () => {\n    const response = await fetch(`http://localhost:1337/posts/${id}`, {\n      method: 'DELETE',\n      headers: { Authorization: `Bearer ${user.jwt}` },\n    });\n    const data = await response.json();\n    history.push('/');\n  };\n\n  const handleEditSubmit = async (event) => {\n    event.preventDefault();\n    console.log('handleEditSubmit');\n    const response = await fetch(`http://localhost:1337/posts/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${user.jwt}`,\n      },\n      body: JSON.stringify({\n        description,\n      }),\n    });\n    const data = await response.json();\n    fetchPost();\n    console.log('handleEditSubmit data', data);\n  };\n\n  const handleLike = async () => {\n    try {\n      const response = await fetch('http://localhost:1337/likes', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${user.jwt}`,\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n          post: parseInt(id),\n        }),\n      });\n      fetchPost();\n    } catch (err) {\n      console.log('Exception ', err);\n    }\n  };\n  const handleRemoveLike = async () => {\n    try {\n      const response = await fetch(`http://localhost:1337/likes/${id}`, {\n        method: 'DELETE',\n        headers: {\n          Authorization: `Bearer ${user.jwt}`,\n        },\n      });\n      fetchPost();\n    } catch (err) {\n      console.log('Exception ', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchPost();\n  }, []);\n  return (\n    <div>\n      {loading && <p>Loading...</p>}\n      {!loading && (\n        <>\n          {post.id && (\n            <>\n              <Post\n                description={post.description}\n                url={post.image && post.image.url}\n                likes={post.likes}\n              />\n              {user && (\n                <>\n                  {isPostAlreadyLiked && (\n                    <button onClick={handleRemoveLike}>Remove Like</button>\n                  )}\n                  {!isPostAlreadyLiked && (\n                    <button onClick={handleLike}>Like</button>\n                  )}\n                </>\n              )}\n              {user && (\n                <>\n                  <button onClick={handleDelete}>Delete this Post</button>\n                  <button onClick={() => setEdit(true)}>Edit this Post</button>\n                  {edit && (\n                    <form onSubmit={handleEditSubmit}>\n                      <input\n                        value={description}\n                        onChange={(event) => setDescription(event.target.value)}\n                        placeholder='New description'\n                      />\n                      <button>Confirm</button>\n                    </form>\n                  )}\n                </>\n              )}\n            </>\n          )}\n          {!post.id && <p>404 - not found</p>}\n        </>\n      )}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/UserContext.js",["75"],"import React, { createContext, useState } from 'react';\n\nexport const UserContext = createContext(null);\n\nexport default ({ children }) => {\n  const [user, setUser] = useState(null);\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Login.js",["76","77"],"import React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from '../context/UserContext';\n\nexport default ({ history }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const { user, setUser } = useContext(UserContext);\n  console.log('user', user);\n\n  useEffect(() => {\n    if (user) {\n      history.push('/');\n    }\n  }, [user]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(`http://localhost:1337/auth/local`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          identifier: email,\n          password,\n        }),\n      });\n\n      const data = await response.json();\n      console.log('data', data);\n\n      if (data.message) {\n        setError(data.message[0].messages[0].message);\n\n        return; //Stop execution\n      }\n\n      setUser(data);\n    } catch (err) {\n      setError('Something went wrong ' + err);\n    }\n  };\n  return (\n    <div>\n      <h2>Login</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='email'\n          value={email}\n          onChange={(event) => {\n            setError('');\n            setEmail(event.target.value);\n          }}\n        />\n        <input\n          type='password'\n          value={password}\n          onChange={(event) => {\n            setError('');\n            setPassword(event.target.value);\n          }}\n        />\n        <button>Login</button>\n      </form>\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/pages/Signup.js",["78"],"import React, { useState, useContext, useEffect } from 'react';\nimport { UserContext } from '../context/UserContext';\n\nexport default (history) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const { user, setUser } = useContext(UserContext);\n  useEffect(() => {\n    if (user) {\n      history.pushState('/');\n    }\n  });\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\n        'http://localhost:1337/auth/local/register',\n        {\n          method: 'POST',\n          headers: {\n            'Content-type': 'application/json',\n          },\n          body: JSON.stringify({\n            username: email,\n            email,\n            password,\n          }),\n        }\n      );\n      const data = await response.json();\n      if (data.message) {\n        setError(data.message[0].messages[0].message);\n        return;\n      }\n      console.log('data', data);\n      setUser(data);\n    } catch (err) {\n      setError('Something went wrong ', err);\n    }\n  };\n  return (\n    <div>\n      <h2>Signup</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='email'\n          value={email}\n          onChange={(event) => setEmail(event.target.value)}\n        />\n\n        <input\n          type='password'\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        <button>Signup</button>\n      </form>\n      {error && <p>{error}</p>}\n    </div>\n  );\n};\n","/Users/seanmodd/Courses/Udemy/Strapi/ig-frontend/src/context/LikesContext.js",["79","80"],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":7,"nodeType":"87","messageId":"88","endLine":4,"endColumn":11},{"ruleId":"89","severity":1,"message":"90","line":18,"column":1,"nodeType":"91","endLine":28,"endColumn":3},{"ruleId":"92","severity":1,"message":"93","line":21,"column":7,"nodeType":"94","endLine":21,"endColumn":64},{"ruleId":"89","severity":1,"message":"90","line":5,"column":1,"nodeType":"91","endLine":29,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":4,"column":1,"nodeType":"91","endLine":83,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":4,"column":1,"nodeType":"91","endLine":29,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":7,"column":1,"nodeType":"91","endLine":145,"endColumn":3},{"ruleId":"85","severity":1,"message":"95","line":15,"column":23,"nodeType":"87","messageId":"88","endLine":15,"endColumn":36},{"ruleId":"96","severity":1,"message":"97","line":19,"column":7,"nodeType":"98","messageId":"99","endLine":20,"endColumn":6},{"ruleId":"100","severity":1,"message":"101","line":19,"column":73,"nodeType":"102","messageId":"103","endLine":19,"endColumn":75},{"ruleId":"85","severity":1,"message":"104","line":44,"column":11,"nodeType":"87","messageId":"88","endLine":44,"endColumn":15},{"ruleId":"85","severity":1,"message":"105","line":68,"column":13,"nodeType":"87","messageId":"88","endLine":68,"endColumn":21},{"ruleId":"85","severity":1,"message":"105","line":85,"column":13,"nodeType":"87","messageId":"88","endLine":85,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":99,"column":6,"nodeType":"108","endLine":99,"endColumn":8,"suggestions":"109"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":1,"nodeType":"91","endLine":12,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":4,"column":1,"nodeType":"91","endLine":72,"endColumn":3},{"ruleId":"106","severity":1,"message":"110","line":16,"column":6,"nodeType":"108","endLine":16,"endColumn":12,"suggestions":"111"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":1,"nodeType":"91","endLine":64,"endColumn":3},{"ruleId":"89","severity":1,"message":"90","line":6,"column":1,"nodeType":"91","endLine":47,"endColumn":3},{"ruleId":"85","severity":1,"message":"104","line":36,"column":15,"nodeType":"87","messageId":"88","endLine":36,"endColumn":19},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'post' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'likesReceived' is assigned a value but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'data' is assigned a value but never used.","'response' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.","ArrayExpression",["114"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [fetchPost]",{"range":"120","text":"121"},"Update the dependencies array to be: [history, user]",{"range":"122","text":"123"},[2738,2740],"[fetchPost]",[441,447],"[history, user]"]